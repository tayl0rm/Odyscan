name: Build & Deploy to K3s

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  workflow_dispatch:  # Allow manual trigger

env:
  PROJECT_ID: "ga-test-project-503ca"
  GAR_LOCATION: "europe-west1"  # Change to your GAR region
  REPO_NAME: "core"
  IMAGE_NAME: "odyscan"
  KUBECONFIG_PATH: "/home/runner/.kube/config"

jobs:
  # âœ… Step 1: Build & Push to Artifact Registry
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Google Artifact Registry
        run: |
          gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

      - name: Build Docker Image
        run: |
          docker build -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:latest .

      - name: Push Docker Image to Artifact Registry
        run: |
          docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:latest

  # ðŸš€ Step 2: Manual Deploy to K3s
  deploy:
    name: Deploy to K3s
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install kubectl
        run: |
          sudo apt-get update && sudo apt-get install -y kubectl

      - name: Set Up Kubeconfig
        run: |
          mkdir -p $(dirname $KUBECONFIG_PATH)
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $KUBECONFIG_PATH
          chmod 600 $KUBECONFIG_PATH
          export KUBECONFIG=$KUBECONFIG_PATH

      - name: Deploy to K3s
        run: |
          kubectl set image deployment/odyscan odyscan=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:latest
          kubectl rollout status deployment/odyscan
